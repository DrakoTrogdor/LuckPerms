plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'maven-publish'
}

archivesBaseName = 'luckperms'

repositories {
    maven { url 'https://maven.fabricmc.net/' }
    mavenLocal()
}

def minecraftVersion = '1.17.1'
def yarnBuild = 14
def loaderVersion = '0.11.6'
def fabricApiVersion = '0.37.0+1.17'

dependencies {
    // Fabric Stuff, We don't specifically target only a single version but yarn mappings require a version to be specified.
    minecraft "com.mojang:minecraft:${minecraftVersion}"
    mappings "net.fabricmc:yarn:${minecraftVersion}+build.${yarnBuild}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loaderVersion}"

    Set<String> apiModules = [
            'fabric-api-base',
            'fabric-command-api-v1',
            'fabric-lifecycle-events-v1',
            'fabric-networking-api-v1'
    ]

    apiModules.forEach {
        modImplementation(fabricApi.module(it, fabricApiVersion))
    }

    include(modImplementation('me.lucko:fabric-permissions-api:0.1-SNAPSHOT'))

    implementation project(':common')
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    inputs.property 'version', project.ext.fullVersion
    filter(ReplaceTokens, tokens: ['version': project.ext.fullVersion])
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 16
}

shadowJar {
    archiveFileName = "luckpermsfabric-${project.ext.fullVersion}-dev.jar"

    dependencies {
        exclude('net.fabricmc:.*')
        include(dependency('net.luckperms:.*'))
        include(dependency('me.lucko.luckperms:.*'))
        // We don't want to include the mappings in the jar do we?
        exclude '/mappings/*'
    }

    relocate 'net.kyori.adventure', 'me.lucko.luckperms.lib.adventure'
    relocate 'net.kyori.event', 'me.lucko.luckperms.lib.eventbus'
    relocate 'com.github.benmanes.caffeine', 'me.lucko.luckperms.lib.caffeine'
    relocate 'okio', 'me.lucko.luckperms.lib.okio'
    relocate 'okhttp3', 'me.lucko.luckperms.lib.okhttp3'
    relocate 'net.bytebuddy', 'me.lucko.luckperms.lib.bytebuddy'
    relocate 'me.lucko.commodore', 'me.lucko.luckperms.lib.commodore'
    relocate 'org.mariadb.jdbc', 'me.lucko.luckperms.lib.mariadb'
    relocate 'com.mysql', 'me.lucko.luckperms.lib.mysql'
    relocate 'org.postgresql', 'me.lucko.luckperms.lib.postgresql'
    relocate 'com.zaxxer.hikari', 'me.lucko.luckperms.lib.hikari'
    relocate 'com.mongodb', 'me.lucko.luckperms.lib.mongodb'
    relocate 'org.bson', 'me.lucko.luckperms.lib.bson'
    relocate 'redis.clients.jedis', 'me.lucko.luckperms.lib.jedis'
    relocate 'com.rabbitmq', 'me.lucko.luckperms.lib.rabbitmq'
    relocate 'org.apache.commons.pool2', 'me.lucko.luckperms.lib.commonspool2'
    relocate 'ninja.leaping.configurate', 'me.lucko.luckperms.lib.configurate'
}

import net.fabricmc.loom.task.RemapJarTask
task remappedShadowJar(type: RemapJarTask) {
    dependsOn tasks.shadowJar
    input = tasks.shadowJar.archivePath
    addNestedDependencies = true
    archiveName = "LuckPerms-Fabric-${project.ext.fullVersion}.jar"
}

tasks.assemble.dependsOn tasks.remappedShadowJar

artifacts {
    archives remappedShadowJar
    shadow shadowJar
}
